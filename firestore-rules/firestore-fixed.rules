rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ✅ Auth helpers
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || 
         request.auth.token.admin == true);
    }
    
    // ✅ Users collection - allow user to create/read/update their own doc
    match /users/{uid} {
      allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow update: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow delete: if isAdmin();
    }
    
    // ✅ Pending team members - allow users to create their own pending entry
    match /pending_members/{memberId} {
      allow read: if isSignedIn() && (request.auth.uid == memberId || isAdmin());
      allow create: if isSignedIn() && request.auth.uid == memberId;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // ✅ Active team members - admin only
    match /active_members/{uid} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // ✅ Projects - visible to signed in users, admin can write
    match /projects/{projectId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // ✅ Announcements - visible to all signed-in users
    match /announcements/{id} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // ✅ Contracts - only visible to owner and admin
    match /contracts/{uid} {
      allow create: if request.auth.uid == uid;
      allow read, update: if request.auth.uid == uid || isAdmin();
      allow delete: if isAdmin();
    }
    
    // ✅ Skill matrix - self and admin access
    match /skill_matrix/{uid} {
      allow read, update: if request.auth.uid == uid || isAdmin();
      allow create, delete: if isAdmin();
    }
    
    // ✅ Wiki or Internal Docs
    match /wiki_docs/{docId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // ✅ Logs / history
    match /activity_logs/{logId} {
      allow create: if isSignedIn();
      allow read: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}
